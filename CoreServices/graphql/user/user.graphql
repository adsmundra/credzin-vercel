type User {
    id: ID
    cards: [Card]
    phone: Phone!
    email: Email!
    basicDetails: UserBasicDetails!
    type: UserType
}

type Phone {
    countryCode: CountryCode!,
    number: String!
}

type Email {
    address: String!
}

enum UserType {
    MEMBER
}


#1. To add transactions or not here? Can user be a filter in transactions?

input CreateUserInput {
    phone: PhoneInput!
    email: EmailInput!
    basicDetails: UserBasicDetailsInput!
}

input PhoneInput {
    countryCode: CountryCode!
    number: String!
}

input EmailInput {
    address: String!
}

input UserBasicDetailsInput {
    firstName: String!
    lastName: String!
    dateOfBirth: String
}

type Query {
    user(id: ID!): User
    users: [User]
}

type Mutation {
    createUser(input: CreateUserInput!): User
}
